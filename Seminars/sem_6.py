# # Задача №39. Решение в группах
# # Даны два массива чисел. Требуется вывести те элементы
# # первого массива (в том порядке, в каком они идут в первом
# # массиве), которых нет во втором массиве. Пользователь вводит
# # число N - количество элементов в первом массиве, затем N
# # чисел - элементы массива. Затем число M - количество
# # элементов во втором массиве. Затем элементы второго массива
# # Ввод: 
# # 7 
# # 3 1 3 4 2 4 12
# # 6
# # 4 15 43 1 15 1 (каждое число вводится с новой строки)
# Вывод:
# 3 3 2 12

    # 1

# Ввод данных по одному элементу в строке  (в столбик) #####

n = int(input("Введите количество элементов в первом массиве: "))
# arr1 = [int(input('Введите сами элементы первого  массива: ')) for _ in range(n)]
arr1 = list(map(int, input().split())) # ввод массива в строку

m = int(input("Введите количество элементов во втором массиве: "))
# arr2 = set(int(input('Введите сами элементы второго  массива: ')) for _ in range(m))
arr2 = list(map(int, input().split())) # ввод массива в строку

# Нахождение элементов первого массива, которых нет во втором массиве
result = [x for x in arr1 if x not in arr2]

# Вывод результата
for num in result:
    print(num, end=' ')


     # 2

n_list = []
n = int(input("Введите количество элементов в первом массиве: "))
for i in range(n):
    n_elem = int(input('Введите сами элементы первого  массива: '))
    n_list.append(n_elem)

m_list = []
m = int(input("Введите количество элементов во втором массиве: "))
for i in range(m):
    m_elem = int(input('Введите сами элементы второго  массива: '))
    m_list.append(m_elem)
print(n_list)
print(m_list)
x_list = []
for i in n_list:
    if i not in m_list:
        x_list.append(i)
print(x_list)





# # Задача №41. Решение в группах
# # Дан массив, состоящий из целых чисел. Напишите
# # программу, которая в данном массиве определит
# # количество элементов, у которых два соседних и, при
# # этом, оба соседних элемента меньше данного. Сначала
# # вводится число N — количество элементов в массиве
# # Далее записаны N чисел — элементы массива. Массив
# # состоит из целых чисел.
# # Ввод:         Ввод:
# # 5             5
# # 1 2 3 4 5     1 5 1 5 1
# # Вывод:        Вывод:
# # 0             2 
# # (каждое число вводится с новой строки)



# Ввод данных в строку #######
n = int(input("Введите количество элементов в массиве: "))
arr = list(map(int, input('Введите элементы массива: ').split()))

# Подсчет количества элементов, у которых два соседних элемента меньше текущего
count = 0
if n < 3:
    count = 0
else:
    for i in range(1, n - 1):
        if arr[i] > arr[i - 1] and arr[i] > arr[i + 1]:
            count += 1

# Вывод результата
print(count)




# # Задача №43. Решение в группах
# # Дан список чисел. Посчитайте, сколько в нем пар
# # элементов, равных друг другу. Считается, что любые
# # два элемента, равные друг другу образуют одну пару,
# # которую необходимо посчитать. Вводится список
# # чисел. Все числа списка находятся на разных
# # строках.
# # Ввод:            Вывод:
# # 1 2 3 2 3        2


# Ввод списка чисел
numbers = []
while True:
    try:
        num = int(input())
        numbers.append(num)
    except:
        break
print(numbers)

# Подсчет количества пар элементов, равных друг другу
pair_count = 0
checked = []
for i in range(len(numbers)):
    if numbers[i] in checked:
        continue
    count = numbers.count(numbers[i])
    pair_count += count // 2
    checked.append(numbers[i])

# Вывод результата
print(pair_count)




# # Задача №45. Решение в группах
# # Два различных натуральных числа n и m называются
# # дружественными, если сумма делителей числа n
# # (включая 1, но исключая само n) равна числу m и
# # наоборот. Например, 220 и 284 – дружественные числа.
# # По данному числу k выведите все пары дружественных
# # чисел, каждое из которых не превосходит k. Программа
# # получает на вход одно натуральное число k, не
# # превосходящее 105
# # . Программа должна вывести все
# # пары дружественных чисел, каждое из которых не
# # превосходит k. Пары необходимо выводить по одной в
# # строке, разделяя пробелами. Каждая пара должна быть
# # выведена только один раз (перестановка чисел новую
# # пару не дает).
# # Ввод:   Вывод:
# # 300     220 284

def sum_of_divisors(n):
    divisors_sum = 1
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            divisors_sum += i
            if n // i != i:
                divisors_sum += n // i
    return divisors_sum

k = int(input())

for n in range(2, k):
    m = sum_of_divisors(n)
    if m > n and sum_of_divisors(m) == n and m <= k:
        print(n, m)
